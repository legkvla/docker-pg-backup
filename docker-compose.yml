
version: '2.1'

volumes:
  db-backups:
  db-data:

services:
  db:
    image: kartoza/postgis:13.0
    volumes:
      - db-data:/var/lib/postgresql
    environment:
      - POSTGRES_DB=gis
      - POSTGRES_USER=docker
      - POSTGRES_PASS=docker
      - ALLOW_IP_RANGE=0.0.0.0/0
      - POSTGRES_MULTIPLE_EXTENSIONS=postgis,hstore,postgis_topology,postgis_raster,pgrouting
    restart: on-failure
    healthcheck:
      test: "exit 0"

  dbbackups:
    image: kartoza/pg-backup:13.0
    volumes:
      - db-backups:/backups
    environment:
      - DUMPPREFIX=PG_gis
      - POSTGRES_HOST=db
      - POSTGRES_USER=docker
      - POSTGRES_PASS=docker
      - POSTGRES_PORT=5432
      - STORAGE_BACKEND="S3"
      - DUMP_ARGS="-Fc"
      - ACCESS_KEY_ID=<put there>
      - SECRET_ACCESS_KEY="<put there>"
      - DEFAULT_REGION=us-west-2
      - BUCKET=<put there>
      - HOST_BASE=s3.amazonaws.com
      - HOST_BUCKET="%(bucket)s.s3.amazonaws.com"
      #- DB_TABLES=yes
      # Add a custom archive so that it can be used to restore as a test
      #- ARCHIVE_FILENAME=latest
      # For restore script
      #- TARGET_DB=gis_restore
      #- WITH_POSTGIS=1
      #- TARGET_ARCHIVE=/backups/latest.gis.dmp
    restart: on-failure
    depends_on:
      db:
        condition: service_healthy
